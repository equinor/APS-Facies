image:
  name: "git.equinor.com:4567/aps/gui/aps-gui:3.3.7"

variables:
  GIT_STRATEGY:           "fetch"
  HTTP_PROXY:             "http://www-proxy.statoil.no:80"
  HTTPS_PROXY:            "http://www-proxy.statoil.no:80"
  FTP_PROXY:              "http://www-proxy.statoil.no:80"
  NO_PROXY:               "git.equinor.com"
  CODE_DIR:               "${CI_PROJECT_DIR}"
  ARTIFACTS:              "${CODE_DIR}/artifacts"
  MAKE:                   "make --directory=${CODE_DIR}"
  MKL_ROOT:               "/opt/intel/mkl"
  PYTHON:                 "${CODE_DIR}/.venv/bin/python"
  SHELL:                  "/bin/bash"
  PIPENV_VENV_IN_PROJECT: "1"
  DEPLOY_SERVER:          "tr-linrgsn001.tr.statoil.no"
  SYSTEM_INSTALL_PIPENV:  "yes"
  RMS_VERSION:            "11.0.1"
  GIT_LFS_SKIP_SMUDGE:    "1"
  RMS_PYTHON:             "/prog/roxar/rms/versions/${RMS_VERSION}/bin/LINUX_64/python"
  MATPLOTLIB_BACKEND:     "Agg"

stages:
  - init
  - check dependencies
  - testing
  - doc-tests  # https://docs.python.org/3/library/doctest.html
  - build gui
  - test gui
  - generate documentation
  - deploy
  - clean docker

before_script:
  - 'export PYTHONPATH="${CODE_DIR}:${PYTHONPATH}"'

initialize:
  stage: init
  variables:
    PYTHON:      "${RMS_PYTHON}"
  script:
    - 'eval $MAKE init'
    - 'eval rm -rf ${WORKON_HOME}/nrlib-*'
    - 'eval rm -f  ${CODE_DIR}/libraries/libgaussField/*.o'
  artifacts:
    name: build-cache
    paths:
      - 'Pipfile'
      - 'Pipfile.lock'
      - '.venv/'
      - 'libs/'
      - 'workflow/'
      - 'src/utils/constants/autogenerated.py'
      - 'src/gui/node_modules'
    expire_in: 24 hours

make documentation:
  stage: generate documentation
  script:  # https://www.logilab.org/blogentry/6883
    - 'eval $MAKE uml-diagrams'
    - 'eval mkdir -p $CI_PROJECT_DIR/uml-diagrams'
    - 'eval mv $CI_PROJECT_DIR/classes_APS-GUI.png $CI_PROJECT_DIR/uml-diagrams'
  allow_failure: true
  artifacts:
    expire_in: 1 week
    paths:
      - uml-diagrams/

vulnerabilities:
  stage: check dependencies
  script:
    - 'eval $MAKE safety-check'

outdated (Python) dependencies:
  stage: check dependencies
  script:
    - 'eval $MAKE check-requirements'
  allow_failure: true

outdated (Node) dependencies:
  stage: check dependencies
  script:
    - 'eval $MAKE check-node-dependencies'
  allow_failure: true

circular dependencies:
  stage: check dependencies
  script:
    - 'eval $MAKE find-circular-dependencies'

linting (Python):
  stage: testing
  script:
    - 'eval $MAKE python-linting'
  allow_failure: true

linting (JavaScript):
  stage: testing
  script:
    - 'eval $MAKE javascript-linting'

unit testing:
  stage: testing  # https://github.com/ksator/continuous-integration-with-python
  script:
    - 'eval $MAKE unit-tests'
  dependencies:
    - initialize

integration testing (RMS 11):
  stage: testing
  variables:
    WRITE_WORKFLOW_FILES_TO_PROJECT: "yes"
    RMS_PROJECT:                     "/testAPSWorkflow_new.rms11.0.0"
    APS_DEBUG_LEVEL:                 "4"
  script:
    - 'eval $MAKE integration-tests'
  dependencies:
    - initialize
  artifacts:
    when: always
    name: logs
    paths:
      - 'src/unit_test/integration/*.log'
      - 'src/unit_test/integration/*.xml'
      - 'src/unit_test/integration/*.dat'
    expire_in: 5 days

build GUI:
  stage: build gui
  script:
    - 'eval $MAKE build-gui'
  artifacts:
    expire_in: 1 month
    paths:
      - '*.plugin'

.setup ssh keys:
  before_script:
    - 'eval export PYTHON=${RMS_PYTHON}'
    # Add the SSH key for cicd_aps
    # From https://docs.gitlab.com/ee/ci/ssh_keys/
    - 'eval $(ssh-agent -s)'
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - $PYTHON -c 'import base64; import os; print(base64.b16decode(os.environ["CICD_APS_PRIVATE_KEY_HEX"]).decode("UTF-8"))' > ~/.ssh/id_rsa
    - ssh-add
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  after_script:
    - rm -rf ~/.ssh


deploy release:
  stage: deploy
  extends: .setup ssh keys
  script:
    - 'eval $MAKE build-stable-gui'
    - 'eval $MAKE deploy-stable'
  only:
    - tags

update master:
  stage: deploy
  extends: .setup ssh keys
  script:
    - 'eval $MAKE update-remote-master'
  only:
    - master


deploy develop:
  stage: deploy
  extends: .setup ssh keys
  script:
    - 'eval $MAKE deploy update-remote-develop'
  dependencies:
    - build GUI
  only:
    - develop
