image:
  name: "git.statoil.no:4567/aps/gui/aps-gui:2.6.3"

variables:
  GIT_STRATEGY: "fetch"
  HTTP_PROXY:   "http://www-proxy.statoil.no:80"
  HTTPS_PROXY:  "http://www-proxy.statoil.no:80"
  FTP_PROXY:    "http://www-proxy.statoil.no:80"
  NO_PROXY:     "git.statoil.no"
  CODE_DIR:     "${CI_PROJECT_DIR}"
  ARTIFACTS:    "${CODE_DIR}/artifacts"
  MAKE:         "make --makefile=${CODE_DIR}/Makefile"
  MKL_ROOT:      "/opt/intel/mkl"
  PYTHON:       "/prog/sdpsoft/python3.6.1/bin/python3"
  SHELL:        "/bin/bash"
  PIPENV_VENV_IN_PROJECT: "1"

stages:
  - init
  - check requirements
  - testing
  - doc-tests  # https://docs.python.org/3/library/doctest.html
  - build gui
  - test gui
  - generate documentation
  - deploy
  - clean docker

initialize:
  stage: init
  variables:
    BUILD_NRLIB: "yes"
    BUILD_APSW: "yes"
  script:
    - 'eval $MAKE init'
    - 'eval rm -rf ${WORKON_HOME}/nrlib-*'
  artifacts:
    name: build-cache
    paths:
      - '.venv/'
      - 'libs/'
      - 'workflow/'
      - 'src/utils/constants/autogenerated.py'
    expire_in: 1 hour

make documentation:
  stage: generate documentation
  script:  # https://www.logilab.org/blogentry/6883
    - 'eval $MAKE uml-diagrams'
    - 'eval mkdir -p $CI_PROJECT_DIR/uml-diagrams'
    - 'eval mv $CI_PROJECT_DIR/classes_APS-GUI.png $CI_PROJECT_DIR/uml-diagrams'
  allow_failure: true
  artifacts:
    expire_in: 1 week
    paths:
      - uml-diagrams/

check for vulnerabilities:
  stage: check requirements
  script:
    - 'eval $MAKE safety-check'
  allow_failure: true  # Only until fix for pip and pipenv

check for outdated requirements:
  stage: check requirements
  script:
    - 'eval $MAKE check-requirements'
  allow_failure: true

linting:
  stage: testing
  script:
    - 'eval $MAKE linting'
  allow_failure: true

unit testing:
  stage: testing  # https://github.com/ksator/continuous-integration-with-python
  script:
    - 'eval $MAKE unit-tests'
  dependencies:
    - initialize

build GUI:
  stage: build gui
  script:
    - 'eval mkdir -p $ARTIFACTS'
    - 'eval $MAKE build'
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts/

deploy release:
  stage: deploy
  script:
    - ""
  only:
    - tags
  dependencies:
    - build GUI
  artifacts:
    paths:
      - artifacts/

deploy release candidate:
  stage: deploy
  script:
    - ""  # TODO
  only:
   - master

deploy develop:
  stage: deploy
  script:
    - "" # TODO
  only:
    - develop
