# -*- coding: utf-8 -*-
from functools import lru_cache


@lru_cache()
def get_cubic_truncation_maps():
    """
    :return:
    """
    # @formatter:off
    return {
        'a': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0]],
        'b': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0]],
        'c': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0]],
        'd': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0]],
        'e': ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 2, 0, 0]],
        'f': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0]],
        'g': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0]],
        'h': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0]],
        'i': ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 1, 3, 0], ['F4', 1.0, 2, 0, 0]],
        'j': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0]],
        'k': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 1], ['F4', 1.0, 2, 2, 2]],
        'l': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0]],
        'm': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0]],
        'n': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 1], ['F3', 1.0, 2, 1, 2], ['F4', 1.0, 2, 2, 0]],
        'o': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0], ['F5', 1.0, 5, 0, 0]],
        'p': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0], ['F5', 1.0, 5, 0, 0]],
        'q': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 1], ['F5', 0.5, 2, 2, 2], ['F4', 1.0, 2, 3, 1], ['F5', 0.5, 2, 3, 2]],
        'r': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 3, 3, 0]],
        's': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 4, 0, 0]],
        't': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 3, 3, 0]],
        'u': ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 4, 0, 0]],
        'v': ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 1, 3, 0], ['F4', 1.0, 1, 4, 0], ['F5', 1.0, 2, 0, 0]],
        'w': ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0], ['F5', 1.0, 2, 4, 0]],
    }
    # @formatter:on


@lru_cache()
def get_non_cubic_truncation_maps():
    """
    :return:
    """
    # @formatter:off
    return {
        'I':    [['F1', 45.0, 1.0], ['F2', 45.0, 1.0]],
        'II':   [['F1', 45.0, 1.0], ['F2', 0.0, 1.0],  ['F3', 0.0, 1.0]],
        'III':  [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 1.0]],
        'IV':   [['F1', 45.0, 1.0], ['F2', 0.0, 0.50], ['F3', 45.0, 1.0],  ['F2', 0.0, 0.5]],
        'V':    [['F1', 45.0, 1.0], ['F2', 0.0, 0.50], ['F3', 45.0, 1.0],  ['F2', 0.0, 0.5], ['F4', 0.0, 0.5]],
        'VI':   [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 0.5],   ['F4', 45.0, 0.5], ['F3', 0.0, 0.5]],
        'VII':  [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 0.5],   ['F4', 45.0, 1.0], ['F3', 0.0, 0.5], ['F5', 0.0, 1.0]],
        'VIII': [['F1', 90.0, 1.0], ['F2', 45.0, 1.0], ['F3', -45.0, 1.0], ['F4', 90.0, 1.0], ['F5', 0.0, 1.0]],
    }
    # @formatter:on
