#  -*- coding: utf-8 -*-
from pathlib import Path
from typing import Dict, List, Iterable, Optional, Any, Callable, Tuple


def get_workflow_block(file_name: str, root_path: Path, relative_path: str) -> str: ...

def get_root_path() -> Path: ...

def get_workflows() -> Dict[str, List[str]]: ...

def get_workflow_dir(root_path: Path) -> Path: ...

def create_workflow_block_file(file_name: str, root_path: Path, relative_path: str) -> None: ...

def get_ipl_scripts(root_path: Path) -> List[Path]: ...

def add_ipl_scripts(root_path: Path) -> None: ...

def run() -> None: ...

def set_file_attributes(root_path: Path) -> None: ...

def _set_read_only(workflow_path: Path) -> None: ...

class _OS:
    @staticmethod
    def walk(path: Path) -> Iterable[Tuple[Path, List[Path], List[Path]]]: ...

    @staticmethod
    def copy(source: Path, target: Path) -> None: ...

    @staticmethod
    def chmod(path: Path) -> None: ...

    @staticmethod
    def exists(path: Path) -> bool: ...

    @staticmethod
    def makedirs(path: Path) -> None: ...

    @staticmethod
    def listdir(path: Path) -> Iterable: ...

    @staticmethod
    def _exec(path: Path, fun: Callable) -> Optional[Any]: ...

    @staticmethod
    def _get_absolute_path(path: Path) -> str: ...
