
Algoritme Cubic (Trunc2D_Cubic)
    def initialize(self, mainFaciesTable, faciesInZone, gaussFieldsInZone, alphaFieldNameForBackGroundFacies,
                   truncStructureList, overlayGroups=None, debug_level=Debug.OFF):

Explanation:
        mainFaciesTable - object from APSMainFaciesTable

        faciesInZone    - list of facies to be modelled for the zone in the sequence specified. The order of the facies is important.

        gaussFieldsInZone - List of name of gauss fields that is defined for the zone. There must be at least enough specified
                            gauss fields that the truncation rule can be specified. If only background facies is specified,
                            then 2 gauss fields are required. If overlay facies is specified, the the gauss field list will be larger.

        alphaFieldNameForBackGroundFacies - This is a list of two gauss fields, and is a subset of the gauss field names
                                            specified in gaussFieldsInZone. The first of these two gauss fields corresponds
                                            to coordinate alpha1 while the second corresponds to alpha2
                                            (The two coordinate axes in the alpha space in which the background facies is defined)

        truncStructureList - Define the truncation rule (facies neigbourhood). Example of format:
        ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0 , 0]]
        The list consist of a first entry which is either 'H' or 'V' for
        horizontal or vertical subdivision for first subdivision of teh unit square.
        The follows N lists if the unit square is to be divided into N polygons (rectangles).
        Each of the N lists ( e.g ['F1', 1.0, 1, 0, 0] ) consists of first the facies name, then a probability fraction
        (which is a number between 0.0 and 1.0), then number of the polygon specified by three integers.
        The first one is the polygon number of level 1, the second is polygon number of level 2 and the third is polygon number at level 3.
        The example:   ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0]] means that the unit square is split horizontally into two polygons.
        These two polygons are not split anymore, and facies for the lowermost rectangle or polygon is 'F1' while 'F2' is
        facies for the uppermost one.

        overlayGroups - List of groups of background facies and associated overlay facies.
                        Example: [overlayGroup1, overlayGroup2, overlayGroup3]
                                 overlayGroup1 = [alphaList1, backgroundList1]
                                 overlayGroup2 = [alphaList2, backgroundList2]
                                 overlayGroup3 = [alphaList3, backgroundList3]
                                 alphaList1 = [alphaAndOverlayFacies11, alphaAndOverlayFacies21, alphaAndOverlayFacies31]
                                 alphaList2 = [alphaAndOverLayFacies12]
                                 alphaList3 = [alphaAndOverLayFacies13, alphaAndOverLayFacies23]
                                 alphaAndOverlayFacies11 = ['GF3', 'F4', 0.15, 0.5]
                                 alphaAndOverlayFacies21 = ['GF4', 'F5', 1.0, 0.5]
                                 alphaAndOverlayFacies31 = ['GF5', 'F4', 40, 0.5]
                                 alphaAndOverlayFacies12 = ['GF3', 'F4', 0.45, 0.0]
                                 alphaAndOverlayFacies13 = ['GF6', 'F6', 0.20, 0.0]
                                 alphaAndOverlayFacies23 = ['GF7', 'F6', 0.80, 0.0]
                                 backgroundList1 =['F1']
                                 backgroundList2 =['F2', 'F3']
                                 backgroundList3 =['F9']

                                 This example define three groups where the tree facies F1, F2, F3, F9 must be defined in the background model.
                                 The background model can of course also contain other facies,
                                 but must be different from  F1, F2, F3, F9 which is already from the background model
                                 and different from F4, F5, F6 which is defined as overlay facies.

                                 Group1 define here that F1 is the background facies and that F4 and F5 are overlay facies for this group since
                                 they are defined in the alpha list for the group. Moreover, F4 is modelled by two gaussian fields,
                                 GF3 and GF5 within this group with probability fractions 0.15 and 0.40.
                                 The reason why the sum is < 1 is because F4 also is specified in overlayGroup2 with probability fraction 0.45
                                 Facies F5 is specified only in overlayGroup1 and has probability fraction 1.0. F5 is defined by GF4.
                                 The last number in  alphaAndOverlayFacies21 is 0.5 center point of truncation interval.
                                 This means that facies F5 will be defined for a grid cell if the drawn value of the alpha coordinate
                                 (alpha1, alpha2, alpha3, alpha4, alpha5, alpha6, alpha7) is such that (alpha1, alpha2) is located in a
                                 polygon in alpha1, alpha2 plane where facies code is 'F1' (background facies) and
                                 alpha3 (GF3) is outside truncation interval which define that F4 should be the facies
                                 and inside the truncation interval for alpha4 (GF4) which is between  [0.5-v,0.5+1]
                                 where v is determines such that the probability will be correct .
                                 This example also show that F5 only will appear where F1 may appear, F4 may appear where F1, F2, F3 is
                                 located but not where F9 is located while  F6 only appear where F9 can appear.
                                 F6 is also modelled by multiple gauss fields so the geometry is a mix defined by geometry from
                                 truncation of both GF6 and GF7.




Name of picture file: A
     mainFaciesTable contains facies name and code for e.g 'F1', 'F2', 'F3', 'F4','F5', 'F6' ..
     faciesInZone = ['F1', 'F2'] or F2 is before F1  (Always a list of facies names that are a subset of what is defined in mainFaciesTable)
     gaussFieldsInZone can e.g be ['GF1', 'GF2', 'GF3', 'GF4']  (All gauss fields defined for the zone,
                                                                 and can be larger than the gauss fields actually used)
     alphaFieldNameForBackGroundFacies can be e.g.  ['GF2', 'GF1']  (Here alpha1 = GF2, alpha2 = GF1)

     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0]]

     overlayGrous= None

In the following only truncStructureList is specified for each picture:

Name of picture: B
truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0]]

Name of picture: C
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0]]

Name of picture: D
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0]]

Name of picture: E
     truncStructureList =  ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 2, 0, 0]]

Name of picture: F
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0]]

Name of picture: G
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0]]

Name of picture: H
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0]]

Name of picture: I
     truncStructureList =  ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 1, 3, 0], ['F4', 1.0, 2, 0, 0]]

Name of picture: J
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0]]

Name of picture: K
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 1], ['F4', 1.0, 2, 2, 2]]

Name of picture: L
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0]]

Name of picture: M
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0]]

Name of picture: N
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 1], ['F3', 1.0, 2, 1, 2], ['F4', 1.0, 2, 2, 0]]

Name of picture: O
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0],['F5', 1.0, 5, 0, 0]]

Name of picture: P
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 0, 0], ['F4', 1.0, 4, 0, 0],['F5', 1.0, 5, 0, 0]]

Name of picture: Q
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 1], ['F5', 0.5, 2, 2, 2], ['F4', 1.0, 2, 3, 1],['F5', 0.5, 2, 3, 2]]

Name of picture: R
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 3, 3, 0]]

Name of picture: S
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 4, 0, 0]]

Name of picture: T
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 3, 3, 0]]

Name of picture: U
     truncStructureList =  ['V', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 0, 0], ['F3', 1.0, 3, 1, 0], ['F4', 1.0, 3, 2, 0], ['F5', 1.0, 4, 0, 0]]

Name of picture: V
     truncStructureList =  ['H', ['F1', 1.0, 1, 1, 0], ['F2', 1.0, 1, 2, 0], ['F3', 1.0, 1, 3, 0], ['F4', 1.0, 1, 4, 0], ['F5', 1.0, 2, 0, 0]]

Name of picture: V
     truncStructureList =  ['H', ['F1', 1.0, 1, 0, 0], ['F2', 1.0, 2, 1, 0], ['F3', 1.0, 2, 2, 0], ['F4', 1.0, 2, 3, 0], ['F5', 1.0, 2, 4, 0]]



Algoritme Non-Cubic: (Trunc2D_Angle)
    def initialize(self, mainFaciesTable, faciesInZone, gaussFieldsInZone, alphaFieldNameForBackGroundFacies,
                   truncStructureList, overlayGroups=None, debug_level=Debug.OFF):

Explanation:
Same as for Cubic , except for truncStructureList
Example of truncStructureList = [['F1', +135.0, 1.0], ['F2', +45.0, 1.0], ['F3', +45.0, 1.0]]
Thies means that the unit square (alpha1, alpha2) plane is subdivided into three polygons. The orientation of the border line between polygon 1 and polygon 2
has normal vector with orientation 135 degrees relative to alpha1 axis. The border line between polygon 2 and 3 has normal vector with
orientation 45 degrees relative to alpha1 axis. The last polygon is the rest of the (alpha1, alpha2) plane. Each polygon is associated with a facies.
The same facies can appear in multiple polygons, with probability fractions that must sum to 1.0. In the case above, the direction angle for border
line for the last polygon is actually not used.

Name of picture: NonCubic_TypeI
truncStructureList = [['F1', 45.0, 1.0], ['F2', +45.0, 1.0]]

Name of picture: NonCubic_TypeII
truncStructureList = [['F1', 45.0, 1.0], ['F2', 0.0, 1.0], ['F3', 0.0, 1.0]]

Name of picture: NonCubic_TypeIII
truncStructureList = [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 1.0]]

Name of picture: NonCubic_TypeIV
truncStructureList = [['F1', 45.0, 1.0], ['F2', 0.0, 0.50], ['F3', 45.0, 1.0], ['F2', 0.0, 0.5]]

Name of picture: NonCubic_TypeV
truncStructureList = [['F1', 45.0, 1.0], ['F2', 0.0, 0.50], ['F3', 45.0, 1.0], ['F2', 0.0, 0.5], ['F4', 0.0, 0.5]]

Name of picture: NonCubic_TypeVI
truncStructureList = [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 0.5], ['F4', 45.0, 0.5], ['F3', 0.0, 0.5]]

Name of picture: NonCubic_TypeVII
truncStructureList = [['F1', 45.0, 1.0], ['F2', 25.0, 1.0], ['F3', 0.0, 0.5], ['F4', 45.0, 1.0], ['F3', 0.0, 0.5], ['F5', 0.0, 1.0]]


Name of picture: NonCubic_TypeVIII
truncStructureList = [['F1', 90.0, 1.0], ['F2', 45.0, 1.0], ['F3', -45.0, 1.0], ['F4', 90.0, 1.0], ['F5', 0.0, 1.0]]



Algoritme Bayfill:
(Here it is probabily necessary to create new figures by running testPreview with specified parameters
 for sf_valye, ysf and sbhd, but we can create some cases with high/low values for these parameters.)

    def initialize(
            self, mainFaciesTable, faciesInZone, faciesInTruncRule, gaussFieldsInZone,
            alphaFieldNameForBackGroundFacies, sf_value, sf_name, ysf, sbhd, useConstTruncParam, debug_level=Debug.OFF)

Name of picture: YSF-low

     sf_value = 0.8
     sf_name=None
     ysf = 0.0
     sbhd = 1.0


Name of picture: YSF-high

     sf_value = 0.8
     sf_name=None
     ysf = 1.0
     sbhd = 1.0

Name of picture: SF-low

     sf_value = 0.0
     sf_name=None
     ysf = 1.0
     sbhd = 1.0

Name of picture: SF-high

     sf_value = 1.0
     sf_name=None
     ysf = 1.0
     sbhd = 1.0
